# Tomcat 启动时提供的端口号
server:
  port: 19004

# 配置注册中心,服务注册到哪里
eureka:
  # 客户端设置
  client:
    # 注册中心地址
    service-url:
      defaultZone: http://localhost:19000/eureka
  # 实例设置
  instance:
    # 服务的唯一ID
    instance-id: ${spring.application.name}:${server.port}
    # 注册服务时候可以使用IP地址
    prefer-ip-address: true

# Spring 配置
spring:
  main:
    # 是否允许覆盖已经定义的bean true允许
    allow-bean-definition-overriding: true
  application:
    # 应用名称
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enable: true # 开启从注册中心动态创建路由的功能，利用微服务名进行路由
      # 配置路由规则
      routes:
        # auth 模块
        - id: auth-server
          uri: lb://auth-server
          predicates:
            # Path Route Predicate Factory断言
            - Path=/oauth/**
          filters:
            - StripPrefix=0
        # server 模块
        - id: message-server # 路由的ID，没有固定规则，但唯一要求，建议配合服务名
          uri: lb://message-server #匹配后提供服务的路由地址-------这里用的动态路由格式统一为 lb://注册进eureka服务中心的名字
          # 断言,进行拦截判断 - 表示集合,可匹配置多个
          predicates:
            # 请求url规则
            - Path=/provider/** #断言，路径相匹配的进行路由--------断言也就是匹配方式，当识别到/provider/**时就会跳转上面的uri
          # 过滤,这个必须写
          filters:
            - StripPrefix=0 # 忽略Path配置的个数，此处为1代表访问/api/provider/**时，会将api忽略，真实的访问地址为lb://provider/**
  # redis 配置
  redis:
    # 地址
    host: 192.168.100.10
    # 端口.默认为6379
    port: 6379
    password: 6666
    timeout: 15000ms
    jedis:
      pool:
        max-active: 600
        max-idle: 300
        max-wait: 15000ms
        min-idle: 10

management:
  #开启所有端点
  endpoints:
    # 开启所有监控端点
    enabled-by-default: true
    web:
      exposure:
        include: '*'
  endpoint:
    # 开启shutdown端口 调用关闭服务
    shutdown:
      enabled: true
    health:
      show-details: always
      enabled: true
    info:
      enabled: false
    metrics:
      enabled: true

# 日志配置
logging:
  config: classpath:logback-spring.xml